% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entrata_internal.R
\name{request_retry}
\alias{request_retry}
\alias{req_should_retry}
\alias{req_retry_is_transient}
\alias{req_retry_backoff}
\alias{req_retry_after}
\title{Request Retry Helpers}
\usage{
req_should_retry(resp)

req_retry_is_transient(resp)

req_retry_backoff(n)

req_retry_after(resp)
}
\arguments{
\item{resp}{\code{\link[httr2:response]{httr2::response()}} object}
}
\value{
\itemize{
\item \code{req_should_retry()} - Logical value indicating whether the request should be
retried.
\item \code{req_retry_is_transient()} - Logical value indicating whether the request is
transient and should be retried.
\item \code{req_retry_backoff()} - The backoff time in seconds.
\item \code{req_retry_after()} - The time to wait before retrying the request.
}
}
\description{
Helper functions for \code{\link[httr2:req_retry]{httr2::req_retry()}}. These functions are used in
conjunction with the \code{req_retry()} function to provide additional information
about the retry behavior of the request.

This is particularly necessary when working with the \code{\link[=entrata_reports]{entrata_reports()}}
functions that call the \verb{/reports} endpoint's \code{getReportData} method since
this method returns a "queue id" that must be used to check the status of the
report generation via a call to the \verb{/queue} endpoint's \code{getQueueStatus} method
passing it the "queue id" as a parameter.
}
\details{
The \code{\link[httr2:req_retry]{httr2::req_retry()}} function alters the HTTP request during
\code{\link[httr2:req_perform]{httr2::req_perform()}} so that it will automatically retry in the case
of a "transient" error. This is useful when working with APIs that may
experience temporary issues that can be resolved by retrying the request.
}
\section{Functions}{

\itemize{
\item \code{req_should_retry()} - Determines if the request should be retried based off
the response's status code.
\item \code{req_retry_is_transient()} - Determines if the request is transient and should
be retried (applicable for the \verb{/queue} endpoint's \code{getQueueStatus} method).
\item \code{req_retry_backoff()} - Determines the backoff time for the request retry in
seconds.
\item \code{req_retry_after()} - Determines the time to wait before retrying the request
based off the response headers.
}
}

\seealso{
\code{\link[httr2:req_retry]{httr2::req_retry()}}
}
