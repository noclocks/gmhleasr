% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entrata_leases.R
\name{entrata_leases}
\alias{entrata_leases}
\title{Retrieve Lease Information from Entrata API}
\usage{
entrata_leases(
  property_id,
  application_id = as.integer(NULL),
  customer_id = as.integer(NULL),
  lease_status_type_ids = as.integer(c(NULL)),
  lease_ids = as.integer(c(NULL)),
  scheduled_ar_code_ids = as.integer(c(NULL)),
  unit_number = as.character(NULL),
  building_name = as.character(NULL),
  move_in_date_from = as.Date(NULL),
  move_in_date_to = as.Date(NULL),
  lease_expiring_date_from = as.Date(NULL),
  lease_expiring_date_to = as.Date(NULL),
  move_out_date_from = as.Date(NULL),
  move_out_date_to = as.Date(NULL),
  include_other_income_leases = FALSE,
  resident_friendly_mode = FALSE,
  include_lease_history = FALSE,
  include_ar_transactions = FALSE,
  pagination_page_number = 1,
  pagination_page_size = 500,
  include_pagination_links = FALSE,
  ...
)
}
\arguments{
\item{property_id}{Required. Integer. The ID of the property to retrieve leases for.}

\item{application_id}{Optional. Integer. Filter leases by application ID.}

\item{customer_id}{Optional. Integer. Filter leases by customer ID.}

\item{lease_status_type_ids}{Optional. Integer vector. Filter leases by status type IDs.}

\item{lease_ids}{Optional. Integer vector. Retrieve specific leases by their IDs.}

\item{scheduled_ar_code_ids}{Optional. Integer vector. Filter leases by scheduled AR code IDs.}

\item{unit_number}{Optional. Character. Filter leases by unit number.}

\item{building_name}{Optional. Character. Filter leases by building name.}

\item{move_in_date_from}{Optional. Date. Filter leases with move-in date from this date.}

\item{move_in_date_to}{Optional. Date. Filter leases with move-in date up to this date.}

\item{lease_expiring_date_from}{Optional. Date. Filter leases expiring from this date.}

\item{lease_expiring_date_to}{Optional. Date. Filter leases expiring up to this date.}

\item{move_out_date_from}{Optional. Date. Filter leases with move-out date from this date.}

\item{move_out_date_to}{Optional. Date. Filter leases with move-out date up to this date.}

\item{include_other_income_leases}{Optional. Logical. Include other income leases in the results.}

\item{resident_friendly_mode}{Optional. Logical. Use resident-friendly mode for the results.}

\item{include_lease_history}{Optional. Logical. Include lease history information in the results.}

\item{include_ar_transactions}{Optional. Logical. Include AR transactions in the results.}

\item{pagination_page_number}{Integer. The page number for paginated results. Default is 1.}

\item{pagination_page_size}{Integer. Number of items per page. Default is 500.}

\item{include_pagination_links}{Logical. Include pagination links in the response. Default is FALSE.}

\item{...}{Additional parameters to pass to the request.}
}
\value{
A tibble containing lease data with parsed and cleaned information.
}
\description{
This function retrieves lease information from the Entrata API. It allows for
filtering and customization of the lease data retrieval based on various parameters.
}
\examples{
\dontrun{
# Retrieve leases for a specific property
leases <- entrata_leases(property_id = 12345)

# Retrieve leases with additional filters
filtered_leases <- entrata_leases(
  property_id = 12345,
  move_in_date_from = as.Date("2023-01-01"),
  move_in_date_to = as.Date("2023-12-31"),
  include_lease_history = TRUE
)
}

}
\seealso{
\code{\link[=parse_entrata_leases]{parse_entrata_leases()}} for details on how the API response is parsed.
}
