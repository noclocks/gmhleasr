% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entrata_api_request.R
\name{entrata}
\alias{entrata}
\title{Entrtata API Request}
\usage{
entrata(
  endpoint = NULL,
  method = NULL,
  params = list(NULL),
  ua = user_agent(),
  verbosity = NULL,
  perform = FALSE,
  extract = perform,
  enable_retry = FALSE,
  max_retries = 3,
  retry_delay = 1,
  config = config::get("entrata"),
  ...
)
}
\arguments{
\item{endpoint}{Entrata API Endpoint to send the request to. Default is \code{NULL}.
See details for the available endpoints.}

\item{method}{Entrata API Method to use in the request.
Not to be confused with the \code{HTTP} request method (i.e. \code{GET}, \code{POST}),
this method must be a method that is available in the Entrata API for the
specified \code{endpoint}. The default value depends on whether the \code{endpoint}
parameter was provided, if it is available the default value is the first
method listed for that endpoint. If no endpoint is specified, \code{NULL}
will be used as the method in the request body. See details for available
methods by endpoint and more details on the structure of the request.}

\item{params}{List of parameters to use in the request. Default is an empty list.
Some endpoint methods have required parameters that must be provided in the
request. See details for more information on the structure of the request
and required parameters by endpoint method.}

\item{ua}{User Agent string to use in the request. Default is to use \code{\link[=user_agent]{user_agent()}}.}

\item{verbosity}{How much information to print? This is a wrapper
around \code{req_verbose()} that uses an integer to control verbosity:
\itemize{
\item 0: no output
\item 1: show headers
\item 2: show headers and bodies
\item 3: show headers, bodies, and curl status messages.
}

Use \code{\link[httr2:with_verbosity]{with_verbosity()}} to control the verbosity of requests that
you can't affect directly.}

\item{perform}{Logical value indicating whether to perform the request.
Default is \code{FALSE}. If \code{FALSE}, the function will return the request object
without performing the request. If \code{TRUE}, the function will perform the
request and return the response object.}

\item{extract}{Logical value indicating whether to extract the response.
Default is the value of \code{perform}. If \code{TRUE}, the function will extract the
response object and return it. If \code{FALSE}, the function will return the
response object as is.}

\item{max_retries}{Maximum number of times to retry the request. Default is \code{3}.
If the request fails, the function will retry the request up to \code{max_retries}
times before returning an error.}

\item{retry_delay}{Number of seconds to wait between retries. Default is \code{1}.
The function will wait \code{retry_delay} seconds before retrying the request.
The delay between retries will increase exponentially with each retry.}

\item{config}{Entrata API Configuration Values as a list. Default is to use
\code{config::get("entrata")} to retrieve the configuration values from a
\code{config.yml} configuration file. The configuration values should include
the following keys: \code{username}, \code{password}, and \code{base_url}. See details.}

\item{...}{Additional arguments not currently in use.}
}
\value{
\code{\link[httr2:request]{httr2::request()}} object with the Entrata API request.
}
\description{
This function sends an \code{HTTP} request to the Entrata API.

Use this function as a base template to create \code{HTTP} requests to the
Entrata API. This function is used by other functions in this package to
create requests to the Entrata API.
}
\details{
This function creates a request to the Entrata API using the \code{httr2} package.

Specifically, the function creates an \verb{HTTP POST} request to the Entrata API
by appending to the request's URL path the provided endpoint, assigning the
\code{POST} \code{HTTP} Method, adding the necessary authentication, populating the
necessary request headers, and deriving the request's body using the provided
\code{method} name and \code{params} parameters. See below for details.

This is the raw format of the base template request:

\if{html}{\out{<div class="sourceCode http">}}\preformatted{POST https://gmhcommunities.entrata.com/api/v1
Headers:
Content-Type: 'application/json; charset=UTF-8'
Accept: '*/*'
Accept-Language: 'en-US,en;q=0.9'
Cache-Control: 'no-cache'
Connection: 'keep-alive'
Origin: 'https://gmhcommunities.entrata.com'
Pragma: 'no-cache'
Referer: 'https://gmhcommunities.entrata.com/'
Authorization: '<REDACTED>'
Body: JSON Encoded Data
}\if{html}{\out{</div>}}

where the \code{Authorization} header is a \code{Basic} authentication header with the
provided username and password and the body is a JSON encoded data object using
the provided \code{method} and \code{params}:

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
"data": \{
  "auth": \{
    "type": [
      "basic"
    ]
  \},
  "requestId": [
    15
  ],
  "method": \{
    "name": [
      "<method>"
    ],
    "version": [
      "r1"
    ],
    "params": \{
      "param1": [
        "value1"
      ],
      "param2": [
        "value2"
      ]
    \}
  \}
\}
\}
}\if{html}{\out{</div>}}
}
\seealso{
\href{https://docs.entrata.com/api/v1/documentation/}{Entrata API Documentation}

\href{https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching}{MDN Web Docs: HTTP Caching}

\code{\link[httr2:req_auth_basic]{httr2::req_auth_basic()}}, \code{\link[httr2:request]{httr2::request()}}, \code{\link[httr2:req_body]{httr2::req_body_json()}},
\code{\link[httr2:req_headers]{httr2::req_headers()}}, \code{\link[httr2:req_template]{httr2::req_template()}}, \code{\link[httr2:req_url]{httr2::req_url_path_append()}},
\code{\link[httr2:req_method]{httr2::req_method()}}
}
